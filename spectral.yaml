extends:
  - [spectral:oas, all]
functionsDir: "./functions"
functions:
  - valid-url-checker
  - valid-version-checker
  - is-a-plural-noun
  - no-http-verbs-in-path
  - check-if-application-or-json-in-put-and-post-response
  - check-if-response-body-json-in-get-response
  - valid-http-response
  - check-for-query-parameter-in-every-path
  - does-spec-contains-valid-http-verbs
  - is-valid-spec
  - operation-summary-description
  - operation-post-201-202-status-code

rules:
  no-$ref-siblings: off

  # Server URLs should follow Trimble API Standards presented in Cloud URL Structure Summary
  # https://api-standards.trimble-pnp.com/api-standard/http#url-structure
  tas-api-server-url-invalid:
    description: API URLs should meet the Trimble API Standards
    message: "{{error}}"
    given: "$.servers"
    severity: warn
    then:
      function: valid-url-checker

  # API Version must include the major version and MUST NOT include the minor version
  # https://api-standards.trimble-pnp.com/api-standard/http#url-versioning
  tas-api-server-url-version-invalid:
    description: API URLs versions should meet the Trimble API Standards
    message: "{{error}}"
    given: "$.servers"
    severity: warn
    then:
      function: valid-version-checker

  # Resource names in the URL must be a noun
  # https://api-standards.trimble-pnp.com/api-standard/http#resource-naming
  tas-api-paths-should-start-with-a-noun:
    description: The root resource name in the URL MUST be a noun and MUST be in the plural form. Further nouns MAY be in the singular.
    message: "{{error}}"
    given: "$.paths"
    severity: error
    then:
      field: "@key"
      function: is-a-plural-noun

  # All schema property names should be camel case.
  # https://api-standards.trimble-pnp.com/api-standard/http#field-names
  tas-openapi-v3-schema-properties-names-camel-case:
    description: Ensuring that schema property names are camel case.
    message: All schema property names should be camel case.
    severity: error
    given: "$..properties.."
    then:
      field: "@key"
      function: pattern
      functionOptions:
        match: "^[a-z][a-zA-Z0-9]*$"
      errorMessage: All field names MUST be formatted as camel case.

  # Resource path should not contain HTTP verbs
  # https://api-standards.trimble-pnp.com/api-standard/http#avoiding-actions-in-resource-names
  tas-no-http-verbs-in-path:
    description: HTTP verbs should be not be in URL paths
    message: "{{property}} has HTTP verb in path: {{error}}"
    recommended: true
    type: style
    given: "$.paths"
    then:
      field: "@key"
      function: no-http-verbs-in-path

  # All APIs returning structured data should support JSON as the default format
  # https://api-standards.trimble-pnp.com/api-standard/http#data-from-apis-bodies-returned-from-gets-posts-puts
  tas-structured-data-format:
    description: All APIs returning structured data should support JSON as the default format.
    severity: error
    message: "{{error}}"
    given: "$.paths.*."
    then:
      function: check-if-application-or-json-in-put-and-post-response

  # All APIs returning structured data should support JSON as the default format.
  # https://api-standards.trimble-pnp.com/api-standard/http#data-from-apis-bodies-returned-from-gets-posts-puts
  tas-structured-data-format-support-json-response-body:
    description: All APIs returning structured data should support JSON as the default format.
    severity: error
    message: "{{error}}"
    given: "$.paths.*."
    then:
      function: check-if-response-body-json-in-get-response

  # All APIs should return a valid http response code (Additional ruleset)
  tdp-http-response-code:
    description: All APIs should return a valid http response code.
    severity: warn
    message: "{{error}}"
    given: "$..responses"
    then:
      field: "@key"
      function: valid-http-response

  # Resource path should not contain query parameter
  # https://api-standards.trimble-pnp.com/api-standard/http#url-parameters
  tas-check-queryparameter-in-endpoint:
    description: Check if the given resource path has queryparameter.
    severity: warn
    message: "{{error}}"
    given: "$.paths"
    then:
      field: "@key"
      function: check-for-query-parameter-in-every-path

  # Spec should contain only valid http verbs (Additional ruleset)
  tdp-does-spec-contains-valid-http-verbs:
    description: All APIs should have a valid http verb.
    severity: warn
    message: "{{error}}"
    given: "$.paths.*"
    then:
      field: "@key"
      function: does-spec-contains-valid-http-verbs

  # Restrict empty spec(Additional ruleset)
  tdp-spec-should-not-be-empty:
    description: Spec should not be empty.
    severity: error
    message: "{{error}}"
    given: "$"
    then:
      function: is-valid-spec

  # Reject Pascal Case within tags
  tdp-tag-pascal-case:
    severity: warn
    recommended: true
    message: Tag names cannot use Pascal Case. Please rename {{value}}.
    given:
      - $.tags[*].name
      - $.paths[*][*].tags[*]
    then:
      function: pattern
      functionOptions:
        #pascal case
        notMatch: "/[A-Z][a-z]+[A-Z][a-z]+$/g"

  # Reject Camel Case within tags
  tdp-tag-camel-case:
    description: Detects a tag with camelCase (personalItem) text within it
    severity: warn
    recommended: true
    message: Tag names cannot use Camel Case. Please rename {{value}}.
    given:
      - $.tags[*].name
      - $.paths[*][*].tags[*]
    then:
      function: pattern
      functionOptions:
        #camel case
        notMatch: "/^[a-z]+[A-Z][a-z]+$/g"

  # Reject version within tags
  tdp-tag-no-versions:
    severity: warn
    recommended: true
    message: Tag names cannot have version information {{value}}. Consider versioning your API.
    given:
      - $.tags[*].name
      - $.paths[*][*].tags[*]
    then:
      function: pattern
      functionOptions:
        #pascal case
        notMatch: "/(V|v)\\s?[0-9]+/g"

  # Check spec version 3 or higher
  tdp-minimum-spec-version:
    description: The spec version should be 3 or greater.
    severity: warn
    formats: ["oas2"]
    given:
      - $
    then:
      field: string
      function: truthy

  # Check operation summaries and descriptions should not match
  tdp-operation-summary-description:
    description: Operation summaries and description should not match
    message: "{{error}}"
    documentationUrl: https://github.com/trimble-oss/openapi-spectral-rules/blob/main/openapi-style-guide.md
    severity: warn
    formats: ["oas3"]
    given:
      - $.paths[*].[get,post,put,patch,delete]
    then:
      function: operation-summary-description

  # All DELETE methods should have a 204 response
  # https://api-standards.trimble-pnp.com/api-standard/http#successful-responses-2xx
  tas-operation-delete-204-status-code:
    description: All DELETE methods should have a 204 response.
    severity: error
    recommended: true
    formats:
      - oas3
    given:
      - $.paths[*].delete.responses
    then:
      field: "204"
      function: truthy

  # All POST methods should have a 201 or 202 response.
  # https://api-standards.trimble-pnp.com/api-standard/http#successful-responses-2xx
  tdp-operation-post-201-202-status-code:
    description: All POST methods should have a 201 or 202 response.
    severity: error
    recommended: true
    formats:
      - oas3
    given:
      - $.paths[*].post.responses
    then:
      function: operation-post-201-202-status-code

  # All 400 responses must include a response body
  # https://api-standards.trimble-pnp.com/api-standard/http#client-error-responses-4xx
  tas-operation-400-response-body:
    description: All 400 responses must include a response body.
    severity: error
    recommended: true
    formats:
      - oas3
    given:
      - $.paths.*.*.responses['400']
    then:
      field: content
      function: truthy

  # Validate for request and response bodies
  tdp-request-and-response-content:
    description: Request bodies and non [204, 202] responses should define a content object
    severity: warn
    recommended: true
    formats:
      - oas3
    given:
      - $.paths[*][get,post,put,patch,delete].responses[?(@property != '204' && @property != '202')]
      - $.paths[*][*].requestBody
    then:
      field: content
      function: truthy
